{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["Homepage","posts","useSiteMetadata","basePath","blogPath","Helmet","name","content","text","to","replaceSlashes","showTags","HomepageComponent","allPost","data","nodes","query","BlogListItem","post","mb","a","as","Link","slug","sx","fontSize","color","title","mt","date","tags","Fragment","Listing","className","map","key"],"mappings":"2NAsCeA,EAhBE,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,MAAwB,EACXC,cAAvBC,EADkC,EAClCA,SAAUC,EADwB,EACxBA,SAElB,OACE,YAAC,IAAD,KACE,YAACC,EAAA,OAAD,KACE,oBAAMC,KAAK,2BAA2BC,QAAQ,iDAEhD,YAAC,IAAD,CAAOC,KAAK,gBACV,YAAC,OAAD,CAAMC,GAAIC,YAAe,IAAIP,EAAL,IAAiBC,IAAzC,mBAEF,YAAC,IAAD,CAASH,MAAOA,EAAOU,UAAU,MChCvC,sCAEeC,UCOA,YAAqB,IAC1BC,EAD0B,EAAlBC,KACRD,QAER,OAAO,kBAAC,EAAD,CAAUZ,MAAOY,EAAQE,SDVnBH,IAEFI,EAAQ,c,2GEgCNC,EAjBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASP,gBAAT,gBACnB,YAAC,IAAD,CAAKQ,GAAI,GACP,YAAC,IAAOC,EAAR,CAAUC,GAAIC,OAAMb,GAAIS,EAAKK,KAAMC,GAAI,CAAEC,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SAClER,EAAKS,OAER,iBAAGH,GAAI,CAAEE,MAAO,YAAaE,GAAI,EAAGR,EAAG,CAAEM,MAAO,aAAeD,SAAU,CAAC,EAAG,EAAG,KAC9E,wBAAOP,EAAKW,MACXX,EAAKY,MAAQnB,GACZ,YAAC,IAAMoB,SAAP,WAEE,YAAC,IAAD,CAAUD,KAAMZ,EAAKY,WCJhBE,IARC,SAAC,GAAD,IAAG/B,EAAH,EAAGA,MAAOgC,EAAV,EAAUA,UAAV,IAAqBtB,gBAArB,gBACd,uBAASa,GAAI,CAAEL,GAAI,CAAC,EAAG,IAAMc,UAAWA,GACrChC,EAAMiC,KAAI,SAAAhB,GAAI,OACb,YAAC,EAAD,CAAciB,IAAKjB,EAAKK,KAAML,KAAMA,EAAMP,SAAUA","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-5a6f6f6ef3976bba28a1.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport Layout from \"./layout\"\r\nimport Title from \"./title\"\r\nimport Listing from \"./listing\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype PostsProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n}\r\n\r\nconst Homepage = ({ posts }: PostsProps) => {\r\n  const { basePath, blogPath } = useSiteMetadata()\r\n\r\n  return (\r\n    <Layout>\r\n      <Helmet>\r\n        <meta name=\"google-site-verification\" content=\"hIdo6HHM8tymhgN-oypnHeqoXRCJv2ePtaSW1ZCEgAQ\" />\r\n      </Helmet>\r\n      <Title text=\"Latest Posts\">\r\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\r\n      </Title>\r\n      <Listing posts={posts} showTags={false} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Homepage\r\n","import { graphql } from \"gatsby\"\r\nimport HomepageComponent from \"../components/homepage\"\r\n\r\nexport default HomepageComponent\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Homepage from \"../../../components/homepage\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: string\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { allPost } = data\r\n\r\n  return <Homepage posts={allPost.nodes} />\r\n}\r\n","/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { Box } from \"@theme-ui/components\"\r\nimport { Link } from \"gatsby\"\r\nimport ItemTags from \"./item-tags\"\r\n\r\ntype BlogListItemProps = {\r\n  post: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }\r\n  showTags?: boolean\r\n}\r\n\r\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\r\n  <Box mb={4}>\r\n    <Styled.a as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\r\n      {post.title}\r\n    </Styled.a>\r\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\r\n      <time>{post.date}</time>\r\n      {post.tags && showTags && (\r\n        <React.Fragment>\r\n          {` â€” `}\r\n          <ItemTags tags={post.tags} />\r\n        </React.Fragment>\r\n      )}\r\n    </p>\r\n  </Box>\r\n)\r\n\r\nexport default BlogListItem\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport BlogListItem from \"./blog-list-item\"\r\n\r\ntype ListingProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  className?: string\r\n  showTags?: boolean\r\n}\r\n\r\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\r\n  <section sx={{ mb: [5, 6] }} className={className}>\r\n    {posts.map(post => (\r\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\r\n    ))}\r\n  </section>\r\n)\r\n\r\nexport default Listing\r\n"],"sourceRoot":""}