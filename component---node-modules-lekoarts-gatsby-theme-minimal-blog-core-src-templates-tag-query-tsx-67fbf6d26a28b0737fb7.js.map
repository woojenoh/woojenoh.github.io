{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/tag.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["Tag","posts","pageContext","useSiteMetadata","tagsPath","basePath","title","name","sx","alignItems","justifyContent","flexFlow","variant","as","a","Link","to","replaceSlashes","mt","TagComponent","data","allPost","nodes","query","BlogListItem","post","showTags","mb","slug","fontSize","color","date","tags","Fragment","Listing","className","map","key"],"mappings":"yOA+CeA,EAnBH,SAAC,GAAqC,IAAnCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAA4B,EACjBC,cAAvBC,EADwC,EACxCA,SAAUC,EAD8B,EAC9BA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAK,QAAUJ,EAAYK,OAChC,YAAC,IAAD,CAAMC,GAAI,CAAEC,WAAY,SAAUC,eAAgB,gBAAiBC,SAAU,SAC3E,YAAC,IAAD,CAASC,QAAQ,KAAKC,GAAG,MACtBX,EAAYK,MAEf,YAAC,IAAOO,EAAR,CAAUD,GAAIE,OAAMP,GAAI,CAAEI,QAAS,mBAAqBI,GAAIC,YAAe,IAAIZ,EAAL,IAAiBD,IAA3F,kBAIF,YAAC,IAAD,CAASH,MAAOA,EAAOO,GAAI,CAAEU,GAAI,CAAC,EAAG,QCzC3C,sCAEeC,UCQA,YAAkC,IAA/BC,EAA+B,EAA/BA,KAAMlB,EAAyB,EAAzBA,YACdmB,EAAYD,EAAZC,QAER,OAAO,kBAAC,EAAD,CAAKpB,MAAOoB,EAAQC,MAAOpB,YAAaA,KDXlCiB,IAEFI,EAAQ,c,2GEgCNC,EAjBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBACnB,YAAC,IAAD,CAAKC,GAAI,GACP,YAAC,IAAOb,EAAR,CAAUD,GAAIE,OAAMC,GAAIS,EAAKG,KAAMpB,GAAI,CAAEqB,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SAClEL,EAAKnB,OAER,iBAAGE,GAAI,CAAEsB,MAAO,YAAaZ,GAAI,EAAGJ,EAAG,CAAEgB,MAAO,aAAeD,SAAU,CAAC,EAAG,EAAG,KAC9E,wBAAOJ,EAAKM,MACXN,EAAKO,MAAQN,GACZ,YAAC,IAAMO,SAAP,WAEE,YAAC,IAAD,CAAUD,KAAMP,EAAKO,WCJhBE,IARC,SAAC,GAAD,IAAGjC,EAAH,EAAGA,MAAOkC,EAAV,EAAUA,UAAV,IAAqBT,gBAArB,gBACd,uBAASlB,GAAI,CAAEmB,GAAI,CAAC,EAAG,IAAMQ,UAAWA,GACrClC,EAAMmC,KAAI,SAAAX,GAAI,OACb,YAAC,EAAD,CAAcY,IAAKZ,EAAKG,KAAMH,KAAMA,EAAMC,SAAUA","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-67fbf6d26a28b0737fb7.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { Flex, Heading } from \"@theme-ui/components\"\r\nimport { Link } from \"gatsby\"\r\nimport Layout from \"./layout\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\nimport Listing from \"./listing\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\nimport SEO from \"./seo\"\r\n\r\ntype TagProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  pageContext: {\r\n    isCreatedByStatefulCreatePages: boolean\r\n    slug: string\r\n    name: string\r\n    [key: string]: any\r\n  }\r\n}\r\n\r\nconst Tag = ({ posts, pageContext }: TagProps) => {\r\n  const { tagsPath, basePath } = useSiteMetadata()\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={`Tag: ${pageContext.name}`} />\r\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\r\n        <Heading variant=\"h2\" as=\"h2\">\r\n          {pageContext.name}\r\n        </Heading>\r\n        <Styled.a as={Link} sx={{ variant: `links.secondary` }} to={replaceSlashes(`/${basePath}/${tagsPath}`)}>\r\n          View all tags\r\n        </Styled.a>\r\n      </Flex>\r\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Tag\r\n","import { graphql } from \"gatsby\"\r\nimport TagComponent from \"../components/tag\"\r\n\r\nexport default TagComponent\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    allPost(sort: { fields: date, order: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Tag from \"../../../components/tag\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: any\r\n  }\r\n  pageContext: any\r\n}\r\n\r\nexport default ({ data, pageContext }: Props) => {\r\n  const { allPost } = data\r\n\r\n  return <Tag posts={allPost.nodes} pageContext={pageContext} />\r\n}\r\n","/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { Box } from \"@theme-ui/components\"\r\nimport { Link } from \"gatsby\"\r\nimport ItemTags from \"./item-tags\"\r\n\r\ntype BlogListItemProps = {\r\n  post: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }\r\n  showTags?: boolean\r\n}\r\n\r\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\r\n  <Box mb={4}>\r\n    <Styled.a as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\r\n      {post.title}\r\n    </Styled.a>\r\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\r\n      <time>{post.date}</time>\r\n      {post.tags && showTags && (\r\n        <React.Fragment>\r\n          {` â€” `}\r\n          <ItemTags tags={post.tags} />\r\n        </React.Fragment>\r\n      )}\r\n    </p>\r\n  </Box>\r\n)\r\n\r\nexport default BlogListItem\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport BlogListItem from \"./blog-list-item\"\r\n\r\ntype ListingProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  className?: string\r\n  showTags?: boolean\r\n}\r\n\r\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\r\n  <section sx={{ mb: [5, 6] }} className={className}>\r\n    {posts.map(post => (\r\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\r\n    ))}\r\n  </section>\r\n)\r\n\r\nexport default Listing\r\n"],"sourceRoot":""}